#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, dish;

static-var  smode, radar, regdar, regmic;

#ifndef ACTIVATION
#define ACTIVATION   1 
#endif

#ifndef RADAR_RADIUS 
#define RADAR_RADIUS 87
#endif

#ifndef JAMMER_RADIUS 
#define JAMMER_RADIUS 88
#endif


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}



undeploy()
{
if (smode == 1)
	{
	smode = 0;
	spin turret around y-axis speed <60.010989>;
	set JAMMER_RADIUS to 0;
	sleep 1000;	
	set RADAR_RADIUS to regdar;
	radar = 1;
	return 1;
	}
}

deploy()
{
if (smode == 0)
	{
	smode = 1;
	radar = 0;
	set RADAR_RADIUS to 0;
	spin turret around y-axis speed <0.000000>;
	sleep 1000;
	set JAMMER_RADIUS to regmic;
	set ACTIVATION to 1;
	return 1;
	}
}


Toggle(t,value) 
{

if(t==1)
	{
	if(value==0)
		{
		call-script deploy();
		}

	if(value==1)
		{	
		call-script undeploy();	
		}
	}
}

go()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	sleep 100;
spin turret around y-axis speed <60.000000>;
set JAMMER_RADIUS to 0;
return 0;
}

Create()
{
	smode = 0;
	radar = 1;
	regdar = get RADAR_RADIUS;
	regmic = get JAMMER_RADIUS;
	start-script SmokeUnit();
	call-script go();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode dish type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode dish type SHATTER | BITMAP2;
		explode turret type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode dish type SHATTER | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode dish type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
